package com.zet.activity;

import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.Part;
import javax.mail.Session;
import javax.mail.Store;
import javax.mail.URLName;
import javax.mail.internet.MimeMessage;

import android.app.ProgressDialog;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;

import com.bdkj.bdlibrary.utils.DialogUtils;
import com.bdkj.bdlibrary.utils.LConfigUtils;
import com.bdkj.bdlibrary.utils.ToastUtils;
import com.lidroid.xutils.annotation.ContentView;
import com.lidroid.xutils.annotation.ViewInject;
import com.lidroid.xutils.event.OnClick;
import com.lidroid.xutils.utils.LogUtils;
import com.sun.mail.imap.IMAPFolder;
import com.sun.mail.pop3.POP3Folder;
import com.zet.ApplicationContext;
import com.zet.BaseActivity;
import com.zet.R;
import com.zet.db.SQLiteUtils;
import com.zet.email.ReciveOneMail;
import com.zet.model.ReciveOneMailDB;
import com.zet.utils.InterfaceConst;

/**
 * 邮箱登陆界面 Cread By ZJY on 15/07/24
 */
@ContentView(R.layout.activity_email_login)
public class LoginEmailActivity extends BaseActivity {
	private String docType = null;
	@ViewInject((R.id.login_email))
	RelativeLayout login_email;
	@ViewInject((R.id.select_email_type))
	RelativeLayout select_email_type;
	@ViewInject((R.id.et_email_username))
	EditText etemail_Username;
	@ViewInject((R.id.et_email_password))
	EditText etemail_Password;
	@ViewInject((R.id.email_rememberPsw))
	CheckBox cemail_Remember;
	String username;
	String password;

	String emailEnd = "";
	SharedPreferences emailSetting;
	protected ProgressDialog dialog;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		if (savedInstanceState != null) {
			docType = savedInstanceState.getString("docType");
		} else {
			docType = getIntent().getStringExtra("docType");
		}
		initView();
	}

	private void initView() {
		// TODO Auto-generated method stub
		emailSetting = LConfigUtils.getPreferences(this,
				InterfaceConst.emailSetting);
		boolean havaAlreadyLogin = emailSetting.getBoolean("isFirstLogin",
				false);
		if (havaAlreadyLogin) {
			login_email.setVisibility(View.VISIBLE);
			select_email_type.setVisibility(View.GONE);
		} else {
			login_email.setVisibility(View.GONE);
			select_email_type.setVisibility(View.VISIBLE);
		}
		String emailUsername = emailSetting.getString(InterfaceConst.emailname,
				"");
		String emailPssword = emailSetting.getString(
				InterfaceConst.emailpassword, "");
		emailEnd = emailSetting.getString("emailEnd", "");
		boolean emailChecked = emailSetting.getBoolean(
				InterfaceConst.emailisChecked, false);
		etemail_Username.setText(emailUsername);
		// etemail_Username.setText("z348433702@126.com");
		etemail_Password.setText(emailPssword);
		etemail_Password.setText("githgpsjaxmuejhu");
		cemail_Remember.setChecked(emailChecked);
	}

	@Override
	protected void onSaveInstanceState(Bundle outState) {
		super.onSaveInstanceState(outState);
		outState.putString("docType", docType);
	}

	@OnClick({ R.id.btn_email_login, R.id.email_select_126,
			R.id.email_select_qq })
	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.btn_email_login:
			username = etemail_Username.getText().toString();
			password = etemail_Password.getText().toString();
			if (!(username.split("@")[1].contains("126"))) {
				ToastUtils.show(mContext, "目前只支持126邮箱登陆");
				return;
			}
			String userEmail = username.replace(emailEnd, "");
			if (TextUtils.isEmpty(userEmail)) {
				ToastUtils.showError(mContext,
						R.string.activity_login_username_disallow_null);
			} else if (TextUtils.isEmpty(password)) {
				ToastUtils.showError(mContext,
						R.string.activity_login_pass_disallow_null);
			} else {
				saveEmailMessage();
				dialog = DialogUtils
						.showLoading(mContext, mContext
								.getString(R.string.dialog_email_loading), true);
				dialog.setCanceledOnTouchOutside(false);
				refuseGetNewEmail();
			}
			break;
		case R.id.email_select_126:
			login_email.setVisibility(View.VISIBLE);
			select_email_type.setVisibility(View.GONE);
			emailEnd = "z348433702@126.com";
			etemail_Username.setText(emailEnd);
			break;
		case R.id.email_select_qq:
			ToastUtils.show(mContext, "暂不支持QQ邮箱");
			// login_email.setVisibility(View.VISIBLE);
			// select_email_type.setVisibility(View.GONE);
			// emailEnd ="@qq.com";
			// etemail_Username.setText("@qq.com");
			break;
		}
	}

	private void refuseGetNewEmail() {
		if (dialog != null) {
			dialog.show();
		}
		new Thread(new Runnable() {

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					receiverEmail();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
					mHandler.sendEmptyMessage(0);
				}
			}
		}).start();
	}

	Handler mHandler = new Handler() {
		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case 0:
				ToastUtils.show(mContext, "邮箱验证失败，请重试");
				dialog.dismiss();
				break;
			case 1:
				dialog.dismiss();
				break;
			}
		};
	};

	public void receiverEmail() throws Exception {
		String[] emailUsernames = username.split("@");
		Properties props = System.getProperties();
		Session session = null;
		URLName urln = null;
		if (emailUsernames[1].contains("126")) {
			props.put("mail.smtp.host", "smtp.126.com");
			props.put("mail.smtp.post", 25);
			props.put("mail.smtp.auth", true);
			session = Session.getDefaultInstance(props, null);
			urln = new URLName("pop3", "pop3.126.com", 110, null,
					emailUsernames[0], password);
		}
		Store store = session.getStore(urln);
		store.connect();
		Folder folder = store.getFolder("INBOX");
		folder.open(Folder.READ_ONLY);
		Message message[] = folder.getMessages();
		Log.d("Dream", "Messages's length: " + message.length);
		if (message.length > 0) {
			Bundle bundle = new Bundle();
			bundle.putString("docType", docType);
			ApplicationContext.showSearch(mContext, bundle);
			finish();
		} else {
			mHandler.sendEmptyMessage(0);
		}
		mHandler.sendEmptyMessage(1);
	}

	private void saveEmailMessage() {
		SharedPreferences.Editor editor = emailSetting.edit();
		editor.putString(InterfaceConst.emailname,
				cemail_Remember.isChecked() ? etemail_Username.getText()
						.toString() : "");
		editor.putString("emailEnd", emailEnd);
		editor.putString(InterfaceConst.emailpassword, cemail_Remember
				.isChecked() ? etemail_Password.getText().toString() : "");
		editor.putBoolean(InterfaceConst.emailisChecked,
				cemail_Remember.isChecked());
		editor.putBoolean("isFirstLogin", true);
		editor.putBoolean("havaAlreadyLogin", true);
		editor.commit();
	}
}
