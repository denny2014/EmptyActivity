package com.zet.activity;

import android.os.Bundle;
import android.view.Gravity;
import android.view.View;
import com.bdkj.bdlibrary.utils.DialogUtils;
import com.bdkj.bdlibrary.utils.HttpUtils;
import com.bdkj.bdlibrary.utils.PhoneUtils;
import com.bdkj.bdlibrary.utils.SerializeUtils;
import com.lidroid.xutils.annotation.ContentView;
import com.lidroid.xutils.event.OnClick;
import com.zet.*;
import com.zet.asyncHandler.LoginHandler;
import com.zet.model.UserInfo;
import com.zet.net.BaseNetHandler;
import com.zet.net.HandlerFactory;
import com.zet.net.INetProxy;

import java.io.File;

/**
 * 类型选择界面
 * Created by macchen on 15/4/3.
 */
@ContentView(R.layout.activity_type)
public class TypeActivity extends BaseActivity {
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
//        if (!Constants.USE_IMEI) {
//            setContentView(R.layout.activity_type);
//        }
//        else{
//            setContentView(R.layout.activity_type_for_login);
//        }
        int type = getIntent().getIntExtra("type", 0);
        findViewById(R.id.btn_back).setVisibility(Constants.USE_IMEI ? View.VISIBLE : View.INVISIBLE);
        if (type == 1) {
            String imei = PhoneUtils.getIMEI(mContext);
            if (imei != null) {
                HttpUtils.get(mContext, Constants.SERVER_URL, ZetParams.getImeiLogin(imei), HandlerFactory.getHandler(LoginHandler.class, new BaseNetHandler(new INetProxy(mContext, this, true, getString(R.string.dialog_recognition_devide)), Constants.LOGIN_IMEI_ACTION)));
            }
        }
    }

    @OnClick({R.id.btn_type_1, R.id.btn_type_2, R.id.btn_type_3, R.id.btn_type_4, R.id.btn_type_5, R.id.btn_back})
    public void onClick(View v) {
        String docType = null;
        switch (v.getId()) {
            case R.id.btn_back:
                finish();
                break;
            case R.id.btn_type_1:
                docType = "01";
                break;
            case R.id.btn_type_2:
                docType = "02";
                break;
            case R.id.btn_type_3:
                docType = "21";
                break;
            case R.id.btn_type_4:
                docType = "11";
                break;
            case R.id.btn_type_5:
                docType = "99";
                break;
        }
        if (docType != null) {
            Bundle bundle = new Bundle();
            bundle.putString("docType", docType);
            ApplicationContext.showSearch(mContext, bundle);
        }
    }

    @Override
    public boolean failure(String type, Object objects) {
        showFailure();
        return true;
    }

    @Override
    public boolean dataFailure(String type, Object objects) {
        showFailure();
        return true;
    }

    public void showFailure() {
        DialogUtils.showConfirmNoTitle(mContext, getString(R.string.activity_type_recognition_devide_fail), getString(R.string.activity_type_recognition_devide_reset), new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String imei = PhoneUtils.getIMEI(mContext);
                if (imei != null) {
                    HttpUtils.get(mContext, Constants.SERVER_URL, ZetParams.getImeiLogin(imei), HandlerFactory.getHandler(LoginHandler.class, new BaseNetHandler(new INetProxy(mContext, TypeActivity.this, true, mContext.getString(R.string.dialog_recognition_devide)), Constants.LOGIN_IMEI_ACTION)));
                }
            }
        }, getString(R.string.activity_type_recognition_devide_exit), new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        }, Gravity.CENTER);
    }

    @Override
    public boolean success(String type, Object objects) {
        Object[] data = (Object[]) objects;
        if (Constants.LOGIN_ACTION.equals(type) || Constants.LOGIN_IMEI_ACTION.equals(type)) {
            UserInfo userInfo = (UserInfo) data[1];
            SerializeUtils.writeObject(new File(getCacheDir(), "user.info"), userInfo);
        }
        return super.success(type, objects);
    }
}