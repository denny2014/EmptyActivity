package com.zet.activity;

import android.content.SharedPreferences;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.Gravity;
import android.view.View;

import com.bdkj.bdlibrary.utils.DialogUtils;
import com.bdkj.bdlibrary.utils.HttpUtils;
import com.bdkj.bdlibrary.utils.LConfigUtils;
import com.bdkj.bdlibrary.utils.PhoneUtils;
import com.bdkj.bdlibrary.utils.SerializeUtils;
import com.bdkj.bdlibrary.utils.ToastUtils;
import com.lidroid.xutils.annotation.ContentView;
import com.lidroid.xutils.event.OnClick;
import com.zet.*;
import com.zet.asyncHandler.LoginHandler;
import com.zet.model.UserInfo;
import com.zet.net.BaseNetHandler;
import com.zet.net.HandlerFactory;
import com.zet.net.INetProxy;
import com.zet.utils.InterfaceConst;

import java.io.File;

/**
 * 类型选择界面 Created by macchen on 15/4/3.
 */
@ContentView(R.layout.activity_type)
public class TypeActivity extends BaseActivity {
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		// if (!Constants.USE_IMEI) {
		// setContentView(R.layout.activity_type);
		// }
		// else{
		// setContentView(R.layout.activity_type_for_login);
		// }
		int type = getIntent().getIntExtra("type", 0);
		findViewById(R.id.btn_back).setVisibility(
				Constants.USE_IMEI ? View.VISIBLE : View.VISIBLE);
		if (type == 1) {
			String imei = PhoneUtils.getIMEI(mContext);
			if (imei != null) {
				HttpUtils.get(mContext, Constants.SERVER_URL, ZetParams
						.getImeiLogin(imei), HandlerFactory.getHandler(
						LoginHandler.class, new BaseNetHandler(new INetProxy(
								mContext, this, true,
								getString(R.string.dialog_recognition_devide)),
								Constants.LOGIN_IMEI_ACTION)));
			}
		}
	}

	@OnClick({ R.id.btn_type_1, R.id.btn_type_2, R.id.btn_type_3,
			R.id.btn_type_4, R.id.btn_type_5, R.id.btn_type_6, R.id.btn_type_7, R.id.btn_type_8, R.id.btn_type_9,R.id.btn_type_10, R.id.btn_back })
	public void onClick(View v) {
		String docType = null;
		String work_type = ""; //01 工作汇报；02 部门预算；03 预算执行；04 工作报告；05 依法行政
		switch (v.getId()) {
		case R.id.btn_back:
			finish();
			break;
		case R.id.btn_type_1:// 财经政策
			docType = "01";
			break;
		case R.id.btn_type_2:// 法律法规
			docType = "02";
			break;
		case R.id.btn_type_3:// 政策解读
			docType = "21";
			break;
		case R.id.btn_type_4:// 财经政策简讯
			docType = "11";
			break;
		case R.id.btn_type_5:// 江苏财经概况
			docType = "11";
			break;
		case R.id.btn_type_6:// 工作管理
			work_type = "01";
		case R.id.btn_type_7:
			work_type = "02";
		case R.id.btn_type_8:
			work_type = "03";
		case R.id.btn_type_9:
			work_type = "04";
		case R.id.btn_type_10:
			work_type = "05";
			docType = "06";
			break;
		}
		if (docType != null) {
			Bundle bundle = new Bundle();
			bundle.putString("docType", docType);
			if (docType.equals("06")) {
				SharedPreferences emailSetting = LConfigUtils.getPreferences(this,
						InterfaceConst.emailSetting);
				boolean havaAlreadyLogin = emailSetting.getBoolean(
						"havaAlreadyLogin", false);
				String emailUsername = emailSetting.getString(InterfaceConst.emailname,
						"");
				String emailPssword = emailSetting.getString(
						InterfaceConst.emailpassword, "");
				if (havaAlreadyLogin&& !TextUtils.isEmpty(emailUsername)&& !TextUtils.isEmpty(emailPssword)) {
					if(emailUsername.contains("@qq")) {
						bundle.putString("docType", docType);
						bundle.putString("workType", work_type);
						ApplicationContext.showSearch(mContext, bundle);
					}else {
						ToastUtils.show(mContext, "目前只支持QQ邮箱登陆");
					}
				} else
					ToastUtils.show(mContext, "账号或密码为空，请联系管理员");
//					ApplicationContext.loginEmail(mContext, bundle);
			} else
				ApplicationContext.showSearch(mContext, bundle);
		}
	}

	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		super.onDestroy();
		SharedPreferences.Editor editor = LConfigUtils.getPreferences(this,
				InterfaceConst.emailSetting).edit();
		editor.putBoolean("havaAlreadyLogin", false);
		editor.commit();
	}

	@Override
	public boolean failure(String type, Object objects) {
		showFailure();
		return true;
	}

	@Override
	public boolean dataFailure(String type, Object objects) {
		showFailure();
		return true;
	}

	public void showFailure() {
		DialogUtils.showConfirmNoTitle(
				mContext,
				getString(R.string.activity_type_recognition_devide_fail),
				getString(R.string.activity_type_recognition_devide_reset),
				new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						String imei = PhoneUtils.getIMEI(mContext);
						if (imei != null) {
							HttpUtils
									.get(mContext,
											Constants.SERVER_URL,
											ZetParams.getImeiLogin(imei),
											HandlerFactory
													.getHandler(
															LoginHandler.class,
															new BaseNetHandler(
																	new INetProxy(
																			mContext,
																			TypeActivity.this,
																			true,
																			mContext.getString(R.string.dialog_recognition_devide)),
																	Constants.LOGIN_IMEI_ACTION)));
						}
					}
				}, getString(R.string.activity_type_recognition_devide_exit),
				new View.OnClickListener() {
					@Override
					public void onClick(View v) {
						finish();
					}
				}, Gravity.CENTER);
	}

	@Override
	public boolean success(String type, Object objects) {
		Object[] data = (Object[]) objects;
		if (Constants.LOGIN_ACTION.equals(type)
				|| Constants.LOGIN_IMEI_ACTION.equals(type)) {
			UserInfo userInfo = (UserInfo) data[1];
			SerializeUtils.writeObject(new File(getCacheDir(), "user.info"),
					userInfo);
		}
		return super.success(type, objects);
	}
}